name: Build Docker images

on:
  workflow_call:
    inputs:
      docker-registry:
        type: string
        default: ghcr.io
      image-name:
        type: string
        default: ${{ github.repository }}
      registry-username:
        type: string
        default: ${{ github.actor }}
      release:
        type: boolean
        default: true
      tag:
        type: string
        default: latest

    secrets:
      github-token:
        required: true
      registry-password:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Build and export to Docker
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: local-test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Log in to registry `${{ inputs.docker-registry }}`
        if: inputs.release == true
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ inputs.docker-registry }}
          username: ${{ inputs.registry-username }}
          password: ${{ secrets.registry-password }}

#      - name: Extract Docker metadata
#        id: meta
#        if: inputs.release == 'true'
#        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
#        with:
#          images: ${{ inputs.docker-registry }}/${{ inputs.image-name }}

      - name: Build and push Docker image
        if: inputs.release == true
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ inputs.docker-registry }}/${{ inputs.image-name }}:${{ inputs.tag }}
#          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
